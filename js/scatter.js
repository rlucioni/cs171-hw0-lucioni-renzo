// Generated by CoffeeScript 1.7.1
var canvasHeight, canvasWidth, dataset, i, margin, maxRange, newNumber1, newNumber2, numDataPoints, svg, xAxis, xScale, yAxis, yScale;

margin = {
  top: 20,
  right: 20,
  bottom: 20,
  left: 30
};

canvasWidth = 500 - margin.left - margin.right;

canvasHeight = 300 - margin.top - margin.bottom;

svg = d3.select("body").append("svg").attr("width", canvasWidth + margin.left + margin.right).attr("height", canvasHeight + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

svg.append("clipPath").attr("id", "chart-area").append("rect").attr({
  x: 0,
  y: 0,
  width: canvasWidth,
  height: canvasHeight
});

dataset = [];

numDataPoints = 50;

maxRange = Math.random() * 1000;

i = 0;

while (i < numDataPoints) {
  newNumber1 = Math.floor(Math.random() * maxRange);
  newNumber2 = Math.floor(Math.random() * maxRange);
  dataset.push([newNumber1, newNumber2]);
  i += 1;
}

xScale = d3.scale.linear().domain([
  0, d3.max(dataset, function(d) {
    return d[0];
  })
]).range([0, canvasWidth]);

yScale = d3.scale.linear().domain([
  0, d3.max(dataset, function(d) {
    return d[1];
  })
]).range([canvasHeight, 0]);

xAxis = d3.svg.axis().scale(xScale).orient("bottom").ticks(5);

yAxis = d3.svg.axis().scale(yScale).orient("left").ticks(5);

svg.append("g").attr({
  id: "circles",
  "clip-path": "url(#chart-area)"
}).selectAll("circle").data(dataset).enter().append("circle").attr({
  cx: function(d) {
    return xScale(d[0]);
  },
  cy: function(d) {
    return yScale(d[1]);
  },
  r: 2
});

svg.append("g").attr("class", "x axis").attr("transform", "translate(0, " + canvasHeight + ")").call(xAxis);

svg.append("g").attr("class", "y axis").call(yAxis);

d3.select("p").on("click", function() {
  var numValues;
  numValues = dataset.length;
  maxRange = Math.random() * 1000;
  dataset = [];
  i = 0;
  while (i < numValues) {
    newNumber1 = Math.floor(Math.random() * maxRange);
    newNumber2 = Math.floor(Math.random() * maxRange);
    dataset.push([newNumber1, newNumber2]);
    i += 1;
  }
  xScale.domain([
    0, d3.max(dataset, function(d) {
      return d[0];
    })
  ]);
  yScale.domain([
    0, d3.max(dataset, function(d) {
      return d[1];
    })
  ]);
  svg.selectAll("circle").data(dataset).transition().duration(1000).each("start", function() {
    return d3.select(this).attr({
      fill: "orange",
      r: 4
    });
  }).attr({
    cx: function(d) {
      return xScale(d[0]);
    },
    cy: function(d) {
      return yScale(d[1]);
    }
  }).transition().duration(1000).attr({
    fill: "black",
    r: 2
  });
  svg.select(".x.axis").transition().duration(1000).call(xAxis);
  return svg.select(".y.axis").transition().duration(1000).call(yAxis);
});
